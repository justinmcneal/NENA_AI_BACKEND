# Generated by Django 5.2.4 on 2025-08-21 08:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30)),
                ('last_otp_sent_at', models.DateTimeField(blank=True, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('pin_hash', models.CharField(blank=True, max_length=128, null=True)),
                ('verification_status', models.CharField(choices=[('UNVERIFIED_OTP', 'OTP Not Verified'), ('OTP_VERIFIED', 'OTP Verified, Profile Incomplete'), ('PROFILE_COMPLETE', 'Profile Complete, Documents Pending'), ('DOCUMENTS_PENDING', 'Documents Uploaded, Awaiting Review'), ('FULLY_VERIFIED', 'Fully Verified')], default='UNVERIFIED_OTP', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
